package messages;

//import java.util.HashMap;
//import java.util.ArrayList;

public class Messager 
{
	public static final String[] PHASE_LIST = {"Фаза передышки", "Фаза движения", "Контакты в Аркхэме", "Контакты в Иных мирах", "Миф"};
	
	public static String getMessage(String enter)
	{
		switch (enter)
		{
		case "Blessed":
			return "Бросьте кубик. Если выпало 1, благословение снято.";
		case "Cursed":
			return "Бросьте кубик. Если выпало 1, проклятие снято.";
		case "Retain":
			return "Получите 1$, затем бросьте кубик. Если выпало 1, карта гонорара изымается.";
		case "Loan":
			return "Бросьте кубик. Если выпало от 1 до 3, заплатите 1$. Если денег нет, отдаете все вещи. Ссуду вам больше брать нельзя.";
		case "Twilight":
			return "В локации \"Ложа Серебряных Сумерек\" проходите контакт во Внутреннем святилище.";
		case "Sheriff":
			return "Вам, как помощнику шерифа, полагается 1$.";
		case "SheriffCar":
			return "Вы можете переместиться в любую локацию Аркхэма вместо движения по обычным правилам.\n"
					+ "После каждого боя и если выходите из Иного мира бросайте кубик. Если выпало 1, карта \"Патрульная машина\" изымается из игры.";
			// to be continued
		default:
			break;
		}
		return "No message";
	}
	
	public static String getTip(String tipCode)
	{
		switch(tipCode)
		{
		case "Retreat":
			return "Бдительность монстра - число в правом углу его изображения.\n\n"
					+ "Если сыщик захочет сбежать от монстра, он должен пройти проверку ухода.\n"
					+ "Проверки ухода основываются на Скрытности сыщика и бдительности монстра. "
					+ "Дополнительные очки ухода дают некоторые предметы, навыки и заклинания.\n"
					+ "Достаточно одного успеха (если не указано обратное). "
					+ "Если проверка провалена, сыщик получает боевой урон монстра. ";
		case "Horror":
			return "Рейтинг ужаса монстра - число в левом углу его описания.\n"
					+ "Урон ужаса - количество синих овалов под рейтингом ужаса.\n\n"
					+ "Бой против существ Мифоса может подавить разум сыщика. Прежде чем начать бой"
					+ "тот должен пройти проверку ужаса.\n"
					+ "Эта проверка основана на воле сыщика и рейтинге ужаса монстра. "
					+ "Дополнительные очки дают некоторые навыки.\n"
					+ "Достаточно одного успеха (если не указано другое). "
					+ "Если проверка провалена, разум сыщика получает урон ужаса."; 
		case "Fight":
			return "Стойкость монстра - число капель крови основании стороны описания.\n"
					+ "Боевой рейтинг монстра - число в правом углу его описания.\n"
					+ "Боевой урон монстра - количество сердечек под боевым рейтигом.\n\n"
					+ "Пройдя или провалив проверку ужаса, сыщик начинает проверку битвы. "
					+ "Проверка битвы зависит от силы сыщика и боевого рейтинга монстра. "
					+ "Навык силы не зависит от сопротивлений или иммунитетов монстра.\n"
					+ "Число успехов за один раз должно быть не меньше стойкости монстра. "
					+ "Меньшее число успехов не засчитывается. Если необходимое число успехов не набрано, "
					+ "сыщик получает урон здоровью, равный боевому рейтингу монстра. "
					+ "После этого сыщик может либо отступить, либо попробовать атаковать снова.\n"
					+ "Если сыщик получает достаточное число успехов, он забирает монстра как трофей (если он не Неисчислим).";
		case "MonsterFeatures":
			return "Некоторые монстры имеют особые условия битвы. Проверяйте их перед битвой. Есть некоторые общие особенности.\n"
					+ "Неисчислимость - после победы над монстром, он должен быть возвращен в пул.\n"
					+ "Физическое (магическое) сопротивление - карта, оказывающая физическое (магическое)"
					+ " воздействие дает половину своего обычного бонуса.\n"
					+ "Физический (магический) иммунитет - карта, оказывающая физическое (магическое) "
					+ "воздействие не дает бонуса.\n"
					+ "Кошмар N - в начале боя с монстром сыщик теряет N рассудка. Если он перед этим "
					+ "провалил проверку ужаса, Кошмар не действует.\n"
					+ "Сокрушение N  - когда сыщик убивает монстра, он получает N здоровья.";
		case "MonsterBorders":
			return "Цвет канта монтров отвечает за их особенности передвижения.\n"
					+ "Черный кант - монстр движется по стандартным правилам.\n"
					+ "Красный кант - монстр движется дважды по стандартным правилам за ход. \n"
					+ "Желтый кант - монстр никогда не движется.\n"
					+ "Зеленый кант - этот монстр движется по персональным правилам, написанным на оборотной стороне.\n"
					+ "Синий кант - этот монстр летающий. В фазе Мифа он перемещается на смежную улицу, если там есть сыщик. "
					+ "Если на смежной улице нет сыщика, он взмывает в небо (смежная со всеми улицами локация). "
					+ "Пока монстр в небе, он считается за монстра на окраинах.";
		case "GateClose":
			return "После того, как сыщик выходит из Врат, он, пока не уйдет из этой локации, может закрыть их.\n"
					+ "Для закрытия Врат требуется пройти проверку силы или знаний (на свой выбор)."
					+ "Штраф к проверке указывается в виде числа справа."
					+ "В случае успеха Врата будут закрыты: сыщик забрает их себе как трофей, а из Аркхэма в пул"
					+ " возвращаются все монстры с таким же знаком, что и внизу Врат. "
					+ "Однако в дальнейшем Врата здесь могут открыться вновь. \n"
					+ "\nЕсли сыщик выходит из Врат в локацию с монстром, то в первый ход он не проходит "
					+ "проверок ухода/ужаса/битвы.";
		case "GateSeal":
			return "Простое закрытие Врат не даст такого мощного эффекта, как их запечатывание.\n"
					+ "Для того, чтобы запечатать Врата, сыщик должен успешно закрыть врата. "
					+ "После этого он должен отдать 5 (8 если Древний - Хастур) улик.\n"
					+ "Врата забираются как трофей, а на локацию ставится Знак Древних: "
					+ "теперь в этой локации не могут появиться новые Врата или чудовища."
					+ "Если у сыщика есть есть уникальный предмет \"Знак Древних\" (воообще-то Старших, т.к. это знак не Мифоса, а кого-то другого), "
					+ "он может не проходить проверку, и не должен тратить улики. Выполнив инструкции \"Знака\", "
					+ "сыщик запечатывает Врата.";
			//To be continued
		default:
			break;	
		}
		
		return "No message";
	}
}
